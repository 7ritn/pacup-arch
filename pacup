#!/bin/bash

function usage() {
  cat <<EOM
Usage: $(basename "$0") [OPTION]...

    -p          Run Pacman only
    -h          Show help

EOM
}

while (($#>0)); do
  case $1 in
    p|-p|--pacman)
      PACUP_MOD="pacman"
      ;;
    h|-h|--help)
      usage
      exit 0
      ;;
    *)
      usage
      exit 1
      ;;
  esac
  shift
done


function PACUP_PACMAN() {
  echo -e "Updating Pacman packages..."
  if [[ "$(whoami)" != "root" && $(command -v checkupdates) ]]; then
    checkupdates > /dev/null
    if [ $? == 0 ]; then
      sudo pacman -Syu
    else
      echo "No updates available."
    fi
  else
    sudo pacman -Syu
  fi
}

function PACUP_ORPHAN() {
  echo -e "\nChecking for orphaned packages..."
  pkgs="$(pacman -Qtdq)"
  if [[ ! -z "$pkgs" ]]
  then 
    echo -e "The following packages are installed but not required (anymore):\n$pkgs\n"
    read -p "Do you want to (r)emove, mark them as (e)xplicit or (i)gnore? [r|e|I] " choice
    case "$choice" in
      r|R ) echo -e "Removing orphaned packages\n" && sudo pacman -Rns $(pacman -Qtdq);;
      e|E ) echo -e "Marking orphaned packages as explicit\n" && sudo pacman -D --asexplicit $pkgs;;
      *   ) echo "No orphaned packages removed";;
    esac
  else
    echo "No orphaned packages."
  fi
}

function PACUP_SYS() {
  if [ $(command -v snap) ]; then
    echo -e "\nUpdating Snap packages..."
    pkgs="$(sudo snap refresh --list)"
    if [[ ! -z "$pkgs" ]]; then 
      sudo snap refresh
    else
      echo "No updates available."
    fi
  fi

  if [ $(command -v flatpak) ]; then
    echo -e "\nUpdating Flatpak packages..."
    pkgs="$(flatpak remote-ls --updates)"
    if [[ ! -z "$pkgs" ]]; then 
      sudo flatpak update
    else
      echo "No updates available."
    fi
  fi
}

function PACUP_AUR_ROOT() {
  if [ "$(whoami)" == "root" ]; then
    echo -e "\nBecause you are running as root, the AUR operation is skipped."
    echo -e "\nDone!"
    exit 0
  fi
  PACUP_AUR
}

function PACUP_AUR() {
  yay_available=$(command -v yay)
  paru_available=$(command -v paru)
  pacaur_available=$(command -v pacaur)
  pikaur_available=$(command -v pikaur)
  aura_available=$(command -v yay)

  if [[ $yay_available || $paru_available || $pacaur_available || $pikaur_available || $aura_available ]]; then
    echo -e "\nUpdating AUR packages..."

    if [ $yay_available ]; then
      yay -Sayu
    elif [ $paru_available ]; then
      paru -Sayu
    elif [ $pacaur_available ]; then
      pacaur -Sayu
    elif [ $pikaur_available ]; then
      pikaur -Sayu
    elif [ $aura_available ]; then
      aura -Au
    fi
  fi
}
  

if [ "$PACUP_MOD" == "pacman" ]; then
  sudo echo -n
  if [ $? != 0 ]; then
    echo -e "\nPacman command requires root privileges.\nPlease try again.\n"
    sudo echo -n
    if [ $? != 0 ]; then
    echo -e "\nExecution terminated because privilege elevation failed."
    exit 1
    fi
  fi
  PACUP_PACMAN
  exit 0
fi

PACUP_PACMAN
PACUP_SYS
PACUP_AUR_ROOT
PACUP_ORPHAN

echo -e "\nDone!"
exit 0
